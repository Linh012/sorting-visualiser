{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","SortingVisualiser/SortingVisualiser.jsx","App.js","reportWebVitals.js","index.js"],"names":["array_length","heapAnimations","swap","arr","leftIndex","rightIndex","temp","quickSort","left","right","animations","index","length","pivot","Math","floor","i","j","push","partition","heap_root","input","max","heapSortAnimation","array","heapSort","getMergeSortAnimations","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","k","doMerge","SortingVisualiser","props","state","this","resetArray","min","random","setState","len","bubbleSortAnimation","disable_buttons","animate","a","arrayBars","document","getElementsByClassName","barOneIdx","newHeight","style","height","Promise","r","setTimeout","enable_buttons","className","map","value","idx","backgroundColor","class","onClick","mergeSort","bubbleSort","React","Component","speed","barTwoIdx","x","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05d5fd45.chunk.js","sourcesContent":["export function bubbleSortAnimation(array) {\n  const animations = [];\n  let len = array.length-1;\n  for(let i=0; i<len; i++){\n    for(let j=0; j<len-i; j++){\n      if (array[j] > array[j+1]) {\n        swap(array, j, j+1);\n        animations.push([j,j+1]);\n      }\n    }\n  }\n  return animations;\n};\n\nfunction swap(arr, leftIndex, rightIndex){\n    const temp = arr[leftIndex];\n    arr[leftIndex] = arr[rightIndex];\n    arr[rightIndex] = temp;\n}\n\nfunction partition(arr, left, right, animations) {\n    var pivot = arr[Math.floor((right + left) / 2)],\n        i = left,\n        j = right;\n    while (i <= j) {\n        while (arr[i] < pivot) {\n            i++;\n        }\n        while (arr[j] > pivot) {\n            j--;\n        }\n        if (i <= j) {\n            swap(arr, i, j);\n            if (i !== j)\n            {\n              animations.push([i,j]);\n            }\n            i++;\n            j--;\n        }\n    }\n    return [i, animations];\n}\n\nfunction quickSort(arr, left, right, animations) {\n    var index;\n    if (arr.length > 1) {\n        [index, animations] = partition(arr, left, right, animations); //index returned from partition\n        if (left < index - 1) { //more elements on the left side of the pivot\n            quickSort(arr, left, index - 1, animations);\n        }\n        if (index < right) { //more elements on the right side of the pivot\n            quickSort(arr, index, right, animations);\n        }\n    }\n    return [arr, animations];\n}\n\n\nexport function quickSortAnimation(array) {\n  return quickSort(array, 0, array.length-1, []);\n}\n\nvar array_length;\nvar heapAnimations;\n/* to create MAX  array */\nfunction heap_root(input, i) {\n  var left = 2 * i + 1;\n  var right = 2 * i + 2;\n  var max = i;\n\n  if (left < array_length && input[left] > input[max]) {\n      max = left;\n  }\n\n  if (right < array_length && input[right] > input[max])     {\n      max = right;\n  }\n\n  if (max !== i) {\n      swap(input, i, max);\n      heapAnimations.push([i,max]);\n      heap_root(input, max);\n  }\n}\n\nfunction heapSort(input) {\n    array_length = input.length;\n\n    for (var i = Math.floor(array_length / 2); i >= 0; i -= 1)      {\n        heap_root(input, i);\n      }\n\n    for (i = input.length - 1; i > 0; i--) {\n        swap(input, 0, i);\n        heapAnimations.push([0,i]);\n        array_length--;\n\n        heap_root(input, 0);\n    }\n}\n\nexport function heapSortAnimation(array){\n  heapAnimations = [];\n  heapSort(array);\n  return heapAnimations;\n}\n\n\nexport function getMergeSortAnimations(array) {\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations,\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations,\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","import React from 'react';\nimport './SortingVisualiser.css';\nimport {bubbleSortAnimation, quickSortAnimation, getMergeSortAnimations, heapSortAnimation} from '../sortingAlgorithms/sortingAlgorithms.js';\n\nconst ARR_LENGTH = 120;\n\nexport default class SortingVisualiser extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      array: [],\n    };\n  }\n\n  componentDidMount(){\n    this.resetArray();\n  }\n\n  resetArray(){\n    const array = [];\n\n    for (let i=0; i<ARR_LENGTH; i++){\n      array.push(randomIntFromInterval(10,500));\n\n    }\n    this.setState({array});\n  }\n\n\n\n  bubbleSort(){\n    const animations = bubbleSortAnimation(this.state.array);\n    disable_buttons();\n    animate(animations, 1);\n  }\n\n  quickSort(){\n    const animations = quickSortAnimation(this.state.array)[1];\n    disable_buttons();\n    animate(animations, 35);\n  }\n\n  async mergeSort(){\n    const animations = getMergeSortAnimations(this.state.array);\n    disable_buttons(animations.length, 7);\n    //Sets heights rather than swapping heights so animate function not used\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      const [barOneIdx, newHeight] = animations[i];\n      const barStyle = arrayBars[barOneIdx].style;\n      barStyle.height = `${newHeight}px`;\n      await new Promise(r => setTimeout(r, 1));\n    }\n    enable_buttons();\n}\n\n  heapSort(){\n    const animations = heapSortAnimation(this.state.array);\n    disable_buttons();\n    animate(animations, 8);\n  }\n\n\n  render() {\n    const {array} = this.state;\n\n    return (\n      <div className=\"array-container\">\n        {array.map((value, idx) => (\n        <div\n          className=\"array-bar\"\n          key={idx}\n          style={{\n            height: `${value}px`,\n            backgroundColor: '#3888ff'\n          }}>\n        </div>\n\n      ))}\n        <div className='button-container'>\n          <button class=\"controls\" onClick={() => this.resetArray()}>New Array</button>\n          <button class=\"controls\" onClick={() => this.quickSort()}>Quick Sort</button>\n          <button class=\"controls\" onClick={() => this.mergeSort()}>Merge Sort</button>\n          <button class=\"controls\" onClick={() => this.heapSort()}>Heap Sort</button>\n          <button class=\"controls\" onClick={() => this.bubbleSort()}>Bubble Sort</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n\n\n//Visualise sorting\nasync function animate(animations, speed){\n    for(let i=0; i<animations.length; i++){\n      const arrayBars = document.getElementsByClassName('array-bar');\n      const [barOneIdx, barTwoIdx] = animations[i];\n      const temp = arrayBars[barOneIdx].style.height;\n      arrayBars[barOneIdx].style.height = arrayBars[barTwoIdx].style.height;\n      arrayBars[barTwoIdx].style.height = temp;\n      await new Promise(r => setTimeout(r, speed));\n    }\n    enable_buttons();\n  }\n\n//Get random integer\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n//Make button unclickable when sorting\nfunction disable_buttons()\n{\n  var x = document.getElementsByClassName(\"controls\");\n\n  //Disable buttons\n  for(let i=0; i<x.length;)\n  {\n    x[i].disabled = true;\n    x[i].className = \"controls-disabled\";\n  }\n}\n\n//Renable button functionality\nfunction enable_buttons()\n{\n  var x = document.getElementsByClassName(\"controls-disabled\");\n\n  //Enable buttons once sorting is complete\n  for(let i=0; i<x.length;)\n  {\n    x[i].disabled = false;\n    x[i].className = \"controls\";\n  }\n}\n","import SortingVisualiser from './SortingVisualiser/SortingVisualiser';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <p>Sorting Visualiser</p>\n      </div>\n\n      <SortingVisualiser/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}